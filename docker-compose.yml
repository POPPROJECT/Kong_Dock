version: "3.7"
services:
  kong-database:
    image: postgres
    container_name: kong-postgres
    restart: on-failure
    volumes:
      - kong_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_DB: kong
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - default

  kong-migration:
    image: kong:latest
    container_name: kong-migration
    command: >
      powershell -Command "
      choco install postgresql --version 13.0.0 --yes --no-progress; 
      while (!(Test-NetConnection -ComputerName kong-database -Port 5432).TcpTestSucceeded) { Start-Sleep -Seconds 1 }; 
      kong migrations bootstrap
      "
    restart: on-failure
    environment:
      KONG_PG_HOST: kong-database
    depends_on:
      kong-database:
        condition: service_healthy
    networks:
      - default

  kong:
    build:
      context: .
      dockerfile: kong.Dockerfile
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_STATUS_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-database
      - kong-migration
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - 8000:8000
      - 8001:8001
      - 8443:8443
      - 8444:8444
    networks:
      - default

  konga:
    container_name: konga
    image: pantsel/konga:latest
    ports:
      - 1337:1337
    networks:
      - default

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - default

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    expose:
      - "9100:9100"
    networks:
      - default

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    external_links:
      - prometheus
    networks:
      - webproxy
      - default

networks:
  webproxy:
    external:
      name: webproxy
  default:
    external:
      name: kong_network

volumes:
  kong_data: {}
  prometheus_data: {}
